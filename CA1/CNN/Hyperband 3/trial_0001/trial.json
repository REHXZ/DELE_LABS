{"trial_id": "0001", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "conv_1_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_conv_layers", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_2_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_dense_layers", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_1_units", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_2_units", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_3_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_4_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}], "values": {"conv_1_filter": 64, "num_conv_layers": 4, "conv_2_filter": 256, "num_dense_layers": 3, "dense_1_units": 128, "dense_2_units": 224, "conv_3_filter": 256, "conv_4_filter": 224, "tuner/epochs": 20, "tuner/initial_epoch": 0, "tuner/bracket": 0, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 430, in _build_hypermodel\n    model = super()._build_hypermodel(hp)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 120, in _build_wrapper\n    return self._build(hp, *args, **kwargs)\n  File \"C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_1448\\4220501978.py\", line 22, in build\n    model.add(keras.layers.Conv2D(\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\tensorflow\\python\\trackable\\base.py\", line 205, in _method_wrapper\n    result = method(self, *args, **kwargs)\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\user\\anaconda3\\envs\\gpu_env\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1969, in _create_c_op\n    raise ValueError(e.message)\nValueError: Exception encountered when calling layer \"conv2d_3\" (type Conv2D).\n\nNegative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", dilations=[1, 1, 1, 1], explicit_paddings=[], padding=\"VALID\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](Placeholder, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,256], [3,3,256,224].\n\nCall arguments received by layer \"conv2d_3\" (type Conv2D):\n  \u2022 inputs=tf.Tensor(shape=(None, 2, 2, 256), dtype=float32)\n"}